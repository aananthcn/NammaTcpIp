#ifndef CAR_OS_TCP_IP_H
#define CAR_OS_TCP_IP_H

// This file is autogenerated, any hand modifications will be lost!

#include <Platform_Types.h>


typedef enum {
    TCPIP_AF_INET,
    TCPIP_AF_INET6,
    TCPIP_MAX_DOMAIN_TYPE
} TcpIpDomainType;


typedef enum {
    TCPIP_UNICAST,
    TCPIP_ANYCAST,
    TCPIP_MULTCAST,
    TCPIP_MAX_ADDR_TYPE
} TcpIpAddressType;


typedef enum {
    TCPIP_STATIC,
    TCPIP_DHCP,
    TCPIP_LINKLOCAL,
    TCPIP_IPV6_ROUTER,
    TCPIP_LINKLOCAL_DOIP,
    TCPIP_MAX_ASSN_METHOD
} TcpIpAssignmentMethod;


typedef enum {
    TCPIP_MANUAL,
    TCPIP_AUTOMATIC,
    TCPIP_MAX_ASSN_TRIGGER
} TcpIpAssignmentTrigger;


typedef enum {
    TCPIP_FORGET,
    TCPIP_STORE,
    TCPIP_MAX_ASSN_LIFETIME
} TcpIpAssignmentLifetime;



typedef struct {
    uint16 mainfn_period_ms;
    uint32 tcpip_buffer_mem;
} TcpIpGeneralCfgType;


typedef struct {
    uint16                    addr_id;
    TcpIpDomainType           domain_type;
    TcpIpAddressType          addr_type;
    TcpIpAssignmentLifetime   addr_assn_life;
    TcpIpAssignmentMethod     addr_assn_method;
    uint8                     addr_assn_prio;
    TcpIpAssignmentTrigger    addr_assn_trig;
    uint16                    ip_addr[16]; /* supports both ipv6 and ipv4 */
    uint16                    ip_netmask[16]; /* supports both ipv6 and ipv4 */
    uint16                    ip_dfroutr[16]; /* supports both ipv6 and ipv4 */
} TcpIpLocalAddr;


#define MAX_TCPIP_LOCAL_ADDRESS     (1)

extern const TcpIpLocalAddr TcpIpLocalAddrConfigs[MAX_TCPIP_LOCAL_ADDRESS];



typedef struct {
    TcpIpGeneralCfgType *gen;
    TcpIpLocalAddr *local_addr;
} TcpIp_ConfigType;


extern const TcpIp_ConfigType TcpIp_Config;


#endif
